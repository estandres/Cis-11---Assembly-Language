CIS 11
1.1.3 Section Review, Questions 1, 3, 8, 12
	1. An assembler is a program that converts source code programs from assembly language into machine language. A Linker is a program that links files created by the assembler into a single executable program. 
	3. A one-to-many relationship when comparing high-level language to assembly language essentially means that one line of code using high-level language performs operations that would require much more code to execute if one were to use assembly language.
	8. I would suppose that type checking is stronger in high-level languages as opposed to assembly language due to the fact that assembly language allows one to directly access memory addresses. 
	12. mov eax, Y;      mov ebx, 4;    imul ebx;    add eax, 3;     mov X, eax;    

1.2.1 Section Review, Questions 2, 3, 10
	2. I suppose that the reason for this would be that translating programs requires less processing power as the computer is decoding a complete set of instructions and can work quickly to execute those instructions holistically. Interpretation however requires that the program interprets and decodes the given instructions as they are being entered; only allowing for a step-by-step execution of said instructions.
	3. True.
	10.  The ISA level, otherwise known as the instruction set architecture.

1.3.9 Section Review, Questions 2, 3, 5, 7
	2. a) 11111000 = 8 + 16 + 32 + 64 + 128 = 248
	     b) 11001010 = 2 + 8 + 64 + 128 = 202
	     c) 11110000 = 128 + 64 + 32 + 16 = 240
	3. 
	a)	00001111	b)	11010101	c)	00001111
	+	00000010	+	01101011	+	00001111
	=	00010001 	=         	101000000	=	00011110
	5.
	a)	7 bits		b)  	9 bits		c) 	15 bits
	7.  a) 1010 0100 0110 1001 0011 1111 1011 1100
	b) 1011 0110 1001 0111 1100 0111 1010 0001
	c) 0010 1011 0011 1101 1001 0100 0110 0001
		
		1.7.1 Short Answer, Questions 1 – 22 & 25
	1. The binary number with the highest value.
	2. a) 53 b) 160 c) 204
	3. a) 	10101111	b) 10010111 	c) 01110101
	    +	11011011	+   11111111	+  10101100
	    =	110001010	=    110010110   =  100100001
	4.  	00001101
	-	00000111	
	=	00000110       
	5. a) 16 bits b) 32 bits c) 64 bits d) 128 bits
	6. a) 12 binary bits b) 15 binary bits c) 15 binary bits
	7. a) 35D9 b) CEA3 c) FEDB 
	8. a) 0000 0001 0010 0110 1111 1001 1101 0100 
	     b) 0110 1010 1100 1101 1111 1010 1001 0101
	     c) 1111 0110 1001 1011 1101 1100 0010 1010
	9.  a)58  b)447  c) 4,097
	10.  a) 98 b) 1,203 c) 671
	11. a) 18  E7+1  E8 b) 14B EB4+1  EB5	
	12. a) 15  EA+1  EB b) 2D  D2+1  D3
	13. a) 27,641 b) C123 3EDC+1   3EDD = -16,093
	14. a) 19,666 b) 8230  7DCF+1 7DCA = -32,202
	15. a) 10110101  01001010  01001011 = -75 b) 00101010 = 42
		c) 11110000  00001111 00010000 = -16
	16. a) 10000000  01111111  10000000 = -128 b) 11001100  00110011  00110100 = -52
		c) 10110111  01001000  01001001 = -73
	17. a) |-5| = 5  00000101  11111010  11111011  
b) |-42| = 42  00101010  11010101  11010110
c) |-16| =  16  00010000  11101111  11110000
18. a) |-72| = 72  01001000  10110111  10111000
b) |-98| = 98  01100010  10011101  10011110
c) |-26| = 26  00011010  11100101  11100110
19. a) AB2 b) 1106
20. a) B82 b) 1316
21.  Hexadecimal: 42 Decimal: 66
22. Hexadecimal: 47 Decimal: 71
25. 



	       

